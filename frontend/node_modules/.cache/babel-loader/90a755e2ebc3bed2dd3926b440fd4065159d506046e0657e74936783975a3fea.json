{"ast":null,"code":"const API_BASE = 'http://localhost:3000/api/produtos';\nexport async function getProducts() {\n  try {\n    const res = await fetch(API_BASE);\n    if (!res.ok) throw new Error('Erro ao buscar produtos');\n    return await res.json();\n  } catch (error) {\n    console.error('Erro na API getProducts:', error);\n    throw error;\n  }\n}\nexport async function createProduct(product) {\n  try {\n    const res = await fetch(API_BASE, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(product)\n    });\n    if (!res.ok) throw new Error('Erro ao criar produto');\n    return await res.json();\n  } catch (error) {\n    console.error('Erro na API createProduct:', error);\n    throw error;\n  }\n}\nexport async function updateProduct(id, product) {\n  try {\n    const res = await fetch(`${API_BASE}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(product)\n    });\n    const responseBody = await res.json();\n    if (!res.ok) {\n      console.error('Erro no backend:', responseBody);\n      throw new Error(responseBody.error || 'Erro ao atualizar produto');\n    }\n    return responseBody;\n  } catch (error) {\n    console.error('Erro na API updateProduct:', error);\n    throw error;\n  }\n}\nexport async function deleteProduct(id) {\n  try {\n    const res = await fetch(`${API_BASE}/${id}`, {\n      method: 'DELETE'\n    });\n    if (!res.ok) throw new Error('Erro ao deletar produto');\n    return await res.json();\n  } catch (error) {\n    console.error('Erro na API deleteProduct:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["API_BASE","getProducts","res","fetch","ok","Error","json","error","console","createProduct","product","method","headers","body","JSON","stringify","updateProduct","id","responseBody","deleteProduct"],"sources":["C:/Users/bigod/OneDrive/Documentos/IFPE/Josino3/cadastro-produtos/cadastro-produtos/cadastro-produtos/frontend/src/services/api.jsx"],"sourcesContent":["const API_BASE = 'http://localhost:3000/api/produtos';\r\n\r\nexport async function getProducts() {\r\n  try {\r\n    const res = await fetch(API_BASE);\r\n    if (!res.ok) throw new Error('Erro ao buscar produtos');\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error('Erro na API getProducts:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function createProduct(product) {\r\n  try {\r\n    const res = await fetch(API_BASE, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(product),\r\n    });\r\n    if (!res.ok) throw new Error('Erro ao criar produto');\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error('Erro na API createProduct:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function updateProduct(id, product) {\r\n  try {\r\n    const res = await fetch(`${API_BASE}/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(product),\r\n    });\r\n\r\n    const responseBody = await res.json();\r\n\r\n    if (!res.ok) {\r\n      console.error('Erro no backend:', responseBody);\r\n      throw new Error(responseBody.error || 'Erro ao atualizar produto');\r\n    }\r\n\r\n    return responseBody;\r\n  } catch (error) {\r\n    console.error('Erro na API updateProduct:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function deleteProduct(id) {\r\n  try {\r\n    const res = await fetch(`${API_BASE}/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    if (!res.ok) throw new Error('Erro ao deletar produto');\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error('Erro na API deleteProduct:', error);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,oCAAoC;AAErD,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,QAAQ,CAAC;IACjC,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IACvD,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeE,aAAaA,CAACC,OAAO,EAAE;EAC3C,IAAI;IACF,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAE;MAChCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IACF,IAAI,CAACR,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IACrD,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeS,aAAaA,CAACC,EAAE,EAAEP,OAAO,EAAE;EAC/C,IAAI;IACF,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,IAAIiB,EAAE,EAAE,EAAE;MAC3CN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IAEF,MAAMQ,YAAY,GAAG,MAAMhB,GAAG,CAACI,IAAI,CAAC,CAAC;IAErC,IAAI,CAACJ,GAAG,CAACE,EAAE,EAAE;MACXI,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEW,YAAY,CAAC;MAC/C,MAAM,IAAIb,KAAK,CAACa,YAAY,CAACX,KAAK,IAAI,2BAA2B,CAAC;IACpE;IAEA,OAAOW,YAAY;EACrB,CAAC,CAAC,OAAOX,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeY,aAAaA,CAACF,EAAE,EAAE;EACtC,IAAI;IACF,MAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,IAAIiB,EAAE,EAAE,EAAE;MAC3CN,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACT,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IACvD,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}